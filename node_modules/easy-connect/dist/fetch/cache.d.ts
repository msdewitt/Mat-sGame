import { Observable } from 'rxjs/Rx';
export interface CacheData {
    data: Object | Object[];
    expiry: number;
}
export declare class Cache {
    getItem<T>(key: (new (...args: any[]) => T)): Observable<T[] | T | any>;
    private getData<T>(key);
    private setData<T>(key, data);
    private constructArray<T>(type, x);
    private construct<T>(type, x);
    setItem<T>(key: (new (...args: any[]) => T), data: T[] | T): Observable<T[] | T>;
    setItemByKey<T>(key: (new (...args: any[]) => T), data: T[] | T, id: any): Observable<T[] | T>;
    setAsyncItemByKey<T>(key: (new (...args: any[]) => T), data: Observable<T[] | T>, id: any): Observable<T[] | T>;
    setAsycItem<T>(key: (new (...args: any[]) => T), data: Observable<T[] | T>): Observable<T[] | T>;
    static removeItem<T>(key: (new (...args: any[]) => T)): Observable<void>;
}
