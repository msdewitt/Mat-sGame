import { Observable } from 'rxjs/Observable';
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/catch';
export declare class Actions {
    private _baseUrl;
    constructor(_baseUrl?: string);
    getData<T>(Type: (new (...args: any[]) => T), url?: string): Observable<T[]>;
    getDataById<T>(Type: (new (...args: any[]) => T), id: any, url?: string): Observable<T>;
    getDataByFilter<T>(Type: (new (...args: any[]) => T), key: any, url?: string): Observable<T>;
    postData<T>(Type: (new (...args: any[]) => T), data: T | T[], url?: string): Observable<any>;
    updateData<T>(Type: (new (...args: any[]) => T), data: T | T[], url?: string): Observable<any>;
    updateDataById<T>(Type: (new (...args: any[]) => T), data: T | T[], id?: any, url?: string): Observable<any>;
    deleteData<T>(Type: (new (...args: any[]) => T), url?: string): Observable<any>;
    deleteDataById<T>(Type: (new (...args: any[]) => T), data: T | T[], id?: any, url?: string): Observable<any>;
}
