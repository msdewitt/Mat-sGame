"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const easy_injectionjs_1 = require("easy-injectionjs");
const core_1 = require("../core");
let AuthFactory = class AuthFactory {
    constructor(authtype = easy_injectionjs_1.is('AUTH_TYPE')) {
        this._auth = easy_injectionjs_1.is((authtype == core_1.AuthType.TOKEN_AUTH) ? 'TOKEN_AUTH' : 'SESSION_AUTH');
    }
    login(loginParams) {
        return this._auth.login(loginParams);
    }
    logout() {
        return this._auth.logout();
    }
    register(registerParams) {
        return this._auth.register(registerParams);
    }
    validate() {
        return this._auth.validate();
    }
    validateData(data) {
        return this._auth.validateData(data);
    }
    get Auth() {
        return this._auth;
    }
};
AuthFactory = __decorate([
    easy_injectionjs_1.EasySingleton(),
    __metadata("design:paramtypes", [Number])
], AuthFactory);
exports.AuthFactory = AuthFactory;
exports.Login = (loginParams) => easy_injectionjs_1.is(AuthFactory).login(loginParams);
exports.Logout = () => easy_injectionjs_1.is(AuthFactory).logout();
exports.Register = (registerParams) => easy_injectionjs_1.is(AuthFactory).register(registerParams);
exports.Validate = () => easy_injectionjs_1.is(AuthFactory).validate();
exports.ValidateData = (data) => easy_injectionjs_1.is(AuthFactory).validateData(data);
//# sourceMappingURL=auth-factory.js.map