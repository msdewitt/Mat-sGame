import { HttpFactory } from '../auth';
export declare function genInstance<T>(Type: (new (...args: any[]) => T), target: T, match: Object): T;
export declare function construct<T>(Type: (new (...args: any[]) => T), url: string, id: any, _http?: HttpFactory): Promise<T>;
export declare function constructArray<T>(Type: (new (...args: any[]) => T), url: string, _http?: HttpFactory): Promise<T[]>;
export declare function createApiData<T>(Type: (new (...args: any[]) => T), url: string, data: T | T[], _http?: HttpFactory): Promise<any>;
export declare function updateApiData<T>(Type: (new (...args: any[]) => T), url: string, data: T | T[], _http?: HttpFactory): Promise<any>;
export declare function deleteApiData<T>(Type: (new (...args: any[]) => T), url: string, _http?: HttpFactory): Promise<any>;
