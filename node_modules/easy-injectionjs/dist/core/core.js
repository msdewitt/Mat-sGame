"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stereotypes = {
    param: Symbol('EasyParam'),
    singleton: Symbol('EasySingleton'),
    prototype: Symbol('EasyPrototype'),
    easy: Symbol('Easy'),
    factory: Symbol('EasyFactory'),
    observable: Symbol('EasyObservable'),
    Inject: Symbol('Inject'),
    Service: Symbol('Service')
};
exports.isPrimitive = (type) => (typeof type === "string"
    || typeof type === "number" || typeof type === "boolean");
class Paremeter {
    constructor(id, name, type) {
        this._id = id;
        this._name = name;
        this._type = type;
    }
    get name() {
        return this._name;
    }
    get id() {
        return this._id;
    }
    get type() {
        return this._type;
    }
    get resolved() {
        return this.resolved;
    }
    set resolved(v) {
        this._resolved = v;
    }
}
exports.Paremeter = Paremeter;
class Dependency {
    constructor(ref, container) {
        this._ref = ref;
        this._container = container;
    }
    get ref() {
        return this._ref;
    }
    get container() {
        return this._container;
    }
    set container(v) {
        this._container = v;
    }
    get resolved() {
        return this._resolved;
    }
    set resolved(v) {
        this._resolved = v;
    }
}
exports.Dependency = Dependency;
var Stereotype;
(function (Stereotype) {
    Stereotype[Stereotype["Singleton"] = 0] = "Singleton";
    Stereotype[Stereotype["Prototype"] = 1] = "Prototype";
    Stereotype[Stereotype["Observable"] = 2] = "Observable";
    Stereotype[Stereotype["Factory"] = 3] = "Factory";
    Stereotype[Stereotype["Easily"] = 4] = "Easily";
})(Stereotype = exports.Stereotype || (exports.Stereotype = {}));
//# sourceMappingURL=core.js.map